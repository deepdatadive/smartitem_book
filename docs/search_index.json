[
["recall-vs-deduction.html", "5 Recall VS Deduction 5.1 Some Graphs", " 5 Recall VS Deduction In this chapter we will look at some differences between recall and deduction items on a Harry Potter assessment. library(dplyr) ## ## Attaching package: &#39;dplyr&#39; ## The following objects are masked from &#39;package:stats&#39;: ## ## filter, lag ## The following objects are masked from &#39;package:base&#39;: ## ## intersect, setdiff, setequal, union library(readr) library(knitr) library(ggplot2) library(lemon) library(stringr) setwd_thisdir &lt;- function () { this.dir &lt;- dirname(parent.frame(3)$ofile) setwd(this.dir) } hp_data = read_csv(&#39;data/domc_order_difficulty/Full Responses After Exclusions.csv&#39;) ## Parsed with column specification: ## cols( ## delivery_id = col_character(), ## item_id = col_character(), ## item_type = col_character(), ## item_total_seconds = col_double(), ## score = col_integer(), ## points_possible = col_integer(), ## key = col_character(), ## option_presented = col_character(), ## response = col_integer(), ## item_component_type = col_character(), ## item_component_seconds = col_double(), ## start_time = col_datetime(format = &quot;&quot;), ## end_time = col_datetime(format = &quot;&quot;) ## ) hp_clean = hp_data %&gt;% filter(item_type == &#39;domc&#39; | item_type == &#39;multiple_choice&#39;, item_component_type == &#39;domc_option&#39; | item_component_type == &#39;final&#39;, !grepl(&#39;Survey&#39;, hp_data$item_id)) %&gt;% group_by(delivery_id, item_id) %&gt;% mutate(option_order = paste0(option_presented, collapse = &quot;&quot;)) recall &lt;- c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;10&quot;, &quot;11&quot;, &quot;12&quot;) deduction = c(&quot;13&quot;, &quot;14&quot;, &quot;15&quot;, &quot;16&quot;, &quot;17&quot;, &quot;18&quot;, &quot;19&quot;, &quot;20&quot;, &quot;21&quot;, &quot;22&quot;) hp_clean$deduction &lt;- ifelse(grepl(paste(deduction,collapse=&quot;|&quot;), hp_clean$item_id),1,0) hp_items = hp_clean %&gt;% group_by(item_id, item_type) %&gt;% summarize(p_value = mean(score), count = n(), deduction = mean(deduction,na.rm=TRUE)) hp_items$item_number = str_extract(hp_items$item_id, &quot;[0-9]+&quot;) 5.1 Some Graphs Here is the difference in p-value between DOMC and multiple choice for the same items. ggplot(hp_items, aes(x=item_type, y=p_value, fill=item_type)) + geom_bar(stat=&quot;identity&quot;) + facet_wrap(~item_number) Here is the difference in p-value between DOMC and multiple choice for the same items. just_mc = hp_items %&gt;% filter(item_type == &#39;multiple_choice&#39;) just_domc = hp_items %&gt;% filter(item_type != &#39;multiple_choice&#39;) differences = hp_items %&gt;% group_by(item_type) %&gt;% summarize(average_p_value = mean(p_value, na.rm=TRUE)) kable(differences) item_type average_p_value domc 0.6933272 multiple_choice 0.6741205 The total difference in p-values between item_types is -0.0192067. Multiple Choice items appear to be slightly more difficult. "]
]
